digraph G {
program -> mainClass -> id_Factorial_0x1a16fa8;
id_Factorial_0x1a16fa8[label="Id Factorial"];
mainClass -> id_a_0x1a16fc8;
id_a_0x1a16fc8[label="Id a"];
mainClass -> Print_0x1a16f60 -> Call_0x1a16f10 -> New_Object_0x1a16e70 -> id_Fac_0x1a16e88;
id_Fac_0x1a16e88[label="Id Fac"];
New_Object_0x1a16e70[label="new Obj"];
Call_0x1a16f10 -> id_ComputeFac_0x1a16f30;
id_ComputeFac_0x1a16f30[label="Id ComputeFac"];
Call_0x1a16f10 -> Arguments_0x1a16eb0 -> constant_0x1a0bcd0
constant_0x1a0bcd0[label="10"];
Arguments_0x1a16eb0[label="Args"];
Call_0x1a16f10[label="ComputeFac()"];
Print_0x1a16f60[label="Print"];
program -> Class_list_0x1a17000 -> Class_0x1a17920 -> id_Fac_0x1a17938;
id_Fac_0x1a17938[label="Id Fac"];
Class_0x1a17920 -> id__0x1a17958;
id__0x1a17958[label="Id "];
Class_0x1a17920 -> Vars_list_0x1a17040 -> var_statement_0x1a17120 -> var_0x1a170d0 -> id_a_0x1a170f0;
id_a_0x1a170f0[label="Id a"];
var_0x1a170d0[label="a : A"];
var_statement_0x1a17120[label="Var decl"];
Vars_list_0x1a17040[label="Variables"];
Class_0x1a17920 -> Methods_0x1a17170 -> Method_0x1a178c0 -> int_0x1a171b0_;
Method_0x1a178c0 -> id_ComputeFac_0x1a178d8;
id_ComputeFac_0x1a178d8[label="Id ComputeFac"];
Method_0x1a178c0 -> Argument_declarations_0x1a172a0 -> var_0x1a17250 -> id_num_0x1a17270;
id_num_0x1a17270[label="Id num"];
var_0x1a17250[label="num : int"];
Argument_declarations_0x1a172a0[label="Arg declaration"];
Method_0x1a178c0 -> Statements_0x1a17300 -> var_statement_0x1a173e0 -> var_0x1a17390 -> id_num_aux_0x1a173b0;
id_num_aux_0x1a173b0[label="Id num_aux"];
var_0x1a17390[label="num_aux : int"];
var_statement_0x1a173e0[label="Var decl"];
Statements_0x1a17300[label="Statements"];
Statements_0x1a17300 -> If_0x1a17810 -> Less_0x1a174b0 -> IdExp_0x1a17430 -> id_num_0x1a17448;
id_num_0x1a17448[label="Id num"];
IdExp_0x1a17430[label="Id Exp"];
Less_0x1a174b0 -> constant_0x1a17480
constant_0x1a17480[label="1"];
Less_0x1a174b0[label="<"];
If_0x1a17810 -> Assign_0x1a17520 -> id_num_aux_0x1a17538;
id_num_aux_0x1a17538[label="Id num_aux"];
Assign_0x1a17520 -> constant_0x1a174f0
constant_0x1a174f0[label="1"];
Assign_0x1a17520[label="="];
If_0x1a17810 -> Assign_0x1a177c0 -> id_num_aux_0x1a177d8;
id_num_aux_0x1a177d8[label="Id num_aux"];
Assign_0x1a177c0 -> Multiply_0x1a17780 -> IdExp_0x1a17570 -> id_num_0x1a17588;
id_num_0x1a17588[label="Id num"];
IdExp_0x1a17570[label="Id Exp"];
Multiply_0x1a17780 -> Call_0x1a17730 -> IdExp_0x1a175c0;
IdExp_0x1a175c0[label="this"];
Call_0x1a17730 -> id_ComputeFac_0x1a17750;
id_ComputeFac_0x1a17750[label="Id ComputeFac"];
Call_0x1a17730 -> Arguments_0x1a176d0 -> Minus_0x1a17690 -> IdExp_0x1a17610 -> id_num_0x1a17628;
id_num_0x1a17628[label="Id num"];
IdExp_0x1a17610[label="Id Exp"];
Minus_0x1a17690 -> constant_0x1a17660
constant_0x1a17660[label="1"];
Minus_0x1a17690[label="-"];
Arguments_0x1a176d0[label="Args"];
Call_0x1a17730[label="ComputeFac()"];
Multiply_0x1a17780[label="*"];
Assign_0x1a177c0[label="="];
If_0x1a17810[label="If-else"];
Statements_0x1a17300[label="Statements"];
Method_0x1a178c0 -> IdExp_0x1a17870 -> id_num_aux_0x1a17888;
id_num_aux_0x1a17888[label="Id num_aux"];
IdExp_0x1a17870[label="Id Exp"];
Method_0x1a178c0[label="Method ComputeFac"];
Methods_0x1a17170[label="Methods"];
Class_0x1a17920[label="Class Fac"];
Class_list_0x1a17000[label="Classes"];
}
